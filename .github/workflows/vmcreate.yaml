name: 'Terraform'
on:
  workflow_dispatch:


 
jobs:
  terraform:
    name: 'Terraform'
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      
      AZURE_RESOURCE_GROUP: ${{ secrets.ARM_RESOURCE_GROUP_NAME }}
      AZURE_STORAGE_ACCOUNT: ${{ secrets.ARM_STORAGE_ACCOUNT_NAME }}
      AZURE_CONTAINER_NAME: ${{ secrets.ARM_CONTAINER_NAME }}
      AZURE_KEY: ${{ secrets.ARM_KEY }}

    runs-on: ubuntu-latest
    environment: dev
 
    defaults:
      run:
        shell: bash
 
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # - name: Create Backend Config File
    #   run: |
    #     echo 'resource_group_name = "${{ secrets.ARM_RESOURCE_GROUP_NAME }}"' > backend.tfvars
    #     echo 'storage_account_name = "${{ secrets.ARM_STORAGE_ACCOUNT_NAME }}"' >> backend.tfvars
    #     echo 'container_name = "${{ secrets.ARM_CONTAINER_NAME }}"' >> backend.tfvars
    #     echo 'key = "${{ secrets.ARM_KEY }}"' >> backend.tfvars
    #   working-directory: ./environments/dev/vm

    - name: 'Terraform Init'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 0.14.8
        tf_actions_subcommand: 'init'
        tf_actions_working_dir: "./environments/dev/vm"
        # backend_config_file: backend.tfvars
        # backend-config: |
        #   resource_group_name =${{ secrets.AZURE_RESOURCE_GROUP }}
        #   storage_account_name =${{ secrets.AZURE_STORAGE_ACCOUNT }}
        #   container_name       =${{ secrets.AZURE_CONTAINER_NAME }}
        #   key                  =${{ secrets.AZURE_KEY }}
         
    # - name: 'Terraform Init'
    #   uses: hashicorp/terraform-github-actions@master
    #   with:
    #     tf_actions_version: 0.14.8
    #     tf_actions_subcommand: 'init'
    #     tf_actions_working_dir: "./environments/dev/vm"
    #     backend-config: |
    #       resource_group_name =${{ secrets.ARM_RESOURCE_GROUP_NAME }}
    #       storage_account_name =${{ secrets.ARM_STORAGE_ACCOUNT_NAME }}
    #       container_name       =${{ secrets.ARM_CONTAINER_NAME }}
    #       key                  =${{ secrets.ARM_KEY }}
        #backend_config_file: "backend.tfvars"
        #args: -backend-config="backend.tfvars"
         
    # - name: 'Terraform Validate'
    #   uses: hashicorp/terraform-github-actions@master
    #   with:
    #     tf_actions_version: 0.14.8
    #     tf_actions_subcommand: 'validate'
    #     tf_actions_working_dir: "./environments/dev/vm"
         
    - name: 'Terraform Plan'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 0.14.8
        tf_actions_subcommand: 'plan'
        tf_actions_working_dir: "./environments/dev/vm"
        args: -var-file="dev.tfvars"
    #     backend-config: |
    #       resource_group_name =${{ secrets.AZURE_RESOURCE_GROUP }}
    #       storage_account_name =${{ secrets.AZURE_STORAGE_ACCOUNT }}
    #       container_name       =${{ secrets.AZURE_CONTAINER_NAME }}
    #       key                  =${{ secrets.AZURE_KEY }}
    # - name: 'Terraform Apply'
    #   if: github.ref == 'refs/heads/main'
    #   uses: hashicorp/terraform-github-actions@master
    #   with:
    #     tf_actions_version: 0.14.8
    #     tf_actions_subcommand: 'apply'
    #     tf_actions_working_dir: "./environments/dev/vm"
    #     env: admin_password:${{ secrets.ADMIN_PASSWORD }}
    #     args: -var-file="dev.tfvars" -var="admin_password=${{ secrets.ADMIN_PASSWORD }}" -var="nic_name=${{ github.event.inputs.nic }}" -var="vm_name=${{ github.event.inputs.vm_name }}" -var="network_name=${{ github.event.inputs.network_name }}"
    #     backend_config_file: backend.tfvars
    #     backend-config: |
    #       resource_group_name =${{ secrets.AZURE_RESOURCE_GROUP }}
    #       storage_account_name =${{ secrets.AZURE_STORAGE_ACCOUNT }}
    #       container_name       =${{ secrets.AZURE_CONTAINER_NAME }}
    #       key                  =${{ secrets.AZURE_KEY }}
                        
