name: 'Terraform'
on:
  workflow_dispatch:
    inputs:
      vm_name:
        description: 'VM Name'
        required: true
        #default: ''
      network_name:
        description: 'network_name'
        required: true
        #default: ''
      nic:
        description: 'nic name'
        required: true
        #default: ''
 # push:
  #  branches:
   # - main
  #pull_request:

 
jobs:
  terraform:
    name: 'Terraform'
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
      
      AZURE_RESOURCE_GROUP: ${{ secrets.AZURE_RESOURCE_GROUP }}
      AZURE_STORAGE_ACCOUNT: ${{ secrets.AZURE_STORAGE_ACCOUNT }}
      AZURE_CONTAINER_NAME: ${{ secrets.AZURE_CONTAINER_NAME }}
      AZURE_KEY: ${{ secrets.AZURE_KEY }}

    runs-on: ubuntu-latest
    environment: dev
 
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
 
    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2
 
  #  - name: 'Terraform Format'
  #    uses: hashicorp/terraform-github-actions@master
   #   with:
    #    tf_actions_version: 0.14.8
     #   tf_actions_subcommand: 'fmt'
      #  tf_actions_working_dir: "./environments/dev/vm"
         
    - name: 'Terraform Init'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 0.14.8
        tf_actions_subcommand: 'init'
        tf_actions_working_dir: "./environments/dev/vm"
        backend-config: |
          resource_group_name =${{ secrets.AZURE_RESOURCE_GROUP }}
          storage_account_name =${{ secrets.AZURE_STORAGE_ACCOUNT }}
          container_name       =${{ secrets.AZURE_CONTAINER_NAME }}
          key                  =${{ secrets.AZURE_KEY }}
        #backend_config_file: "backend.tfvars"
        #args: -backend-config="backend.tfvars"
         
    - name: 'Terraform Validate'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 0.14.8
        tf_actions_subcommand: 'validate'
        tf_actions_working_dir: "./environments/dev/vm"
         
    - name: 'Terraform Plan'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 0.14.8
        tf_actions_subcommand: 'plan'
        tf_actions_working_dir: "./environments/dev/vm"
        env: admin_password:${{ secrets.ADMIN_PASSWORD }}
        args: -var-file="dev.tfvars" -var="admin_password=${{ secrets.ADMIN_PASSWORD }}" -var="nic_name=${{ github.event.inputs.nic }}" -var="vm_name=${{ github.event.inputs.vm_name }}" -var="network_name=${{ github.event.inputs.network_name }}"
        backend-config: |
          resource_group_name =${{ secrets.AZURE_RESOURCE_GROUP }}
          storage_account_name =${{ secrets.AZURE_STORAGE_ACCOUNT }}
          container_name       =${{ secrets.AZURE_CONTAINER_NAME }}
          key                  =${{ secrets.AZURE_KEY }}
    - name: 'Terraform Apply'
      if: github.ref == 'refs/heads/main'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 0.14.8
        tf_actions_subcommand: 'apply'
        tf_actions_working_dir: "./environments/dev/vm"
        env: admin_password:${{ secrets.ADMIN_PASSWORD }}
        args: -var-file="dev.tfvars" -var="admin_password=${{ secrets.ADMIN_PASSWORD }}" -var="nic_name=${{ github.event.inputs.nic }}" -var="vm_name=${{ github.event.inputs.vm_name }}" -var="network_name=${{ github.event.inputs.network_name }}"
        backend_config_file: backend.tfvars
        backend-config: |
          resource_group_name =${{ secrets.AZURE_RESOURCE_GROUP }}
          storage_account_name =${{ secrets.AZURE_STORAGE_ACCOUNT }}
          container_name       =${{ secrets.AZURE_CONTAINER_NAME }}
          key                  =${{ secrets.AZURE_KEY }}
                        
